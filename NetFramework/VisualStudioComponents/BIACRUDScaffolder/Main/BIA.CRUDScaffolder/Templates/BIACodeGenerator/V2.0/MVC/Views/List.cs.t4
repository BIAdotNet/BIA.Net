<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
<#if (TranslateType) 
{#>
    ViewBag.Title = TextResources.ListOf + " " + Html.TranslateAndPlurialize("<#= ViewDataTypeShortName #>");
<#}
else
{#>
    ViewBag.Title = TextResources.ListOf + " " + "<#= ViewDataTypeShortName #>"  + "s";
<#}
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@TextResources.<#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>


<div class="biaList">
    <div class="biaListContainer">
<#if (GenerateFilter){ #>
        <div class="biaListFilter">
            <div class="w-100 mb-4">
                <a class="btn btn-filterbox mb-0 biaListFilter-toggle-cross">
                    <div class="svgIcon cross-filter"></div>
                </a>
                <h3 class="align-middle d-inline">Filtres</h3>
            </div>
            <div id="<#= ViewDataTypeShortName #>FilterContent"></div>
        </div>
<# } #>
        <div class="biaListDisplay">
            <div class="row">
                <div class="col-md-6">
<#if (GenerateFilter){ #>
                    <a Id="<#= ViewDataTypeShortName #>FilterButton" class="btn align-top btn-filterbox empty biaListFilter-toggle" data-toggle="tooltip" data-target="" data-placement="bottom" title="Filtres">
                        <div class="svgIcon filter-box"></div>
                    </a>
<# } #>
                    <h2 class="titlePage align-top">@TextResources.ListOf <#if (TranslateType) {#>@Html.TranslateAndPlurialize("<#= ViewDataTypeShortName #>")<#}else{#><#= ViewDataTypeShortName #>s<#}#></h2>
                </div>
                <div class="col dt-buttons-group">
                    @if (User.IsInRole(Constants.RoleAdmin))
                    {
                        @Html.ActionLink(TextResources.New, "Create", new { }, new { @class = "btn btn-main float-right", BIADialogLink = "Type:Modal" })
                    }

                </div>
            </div>

<# if (GenerateListAjax || GenerateListFullAjax) { #>
			<div BIADialogRefresh="OnlyEvent;OnFormValidated:@Url.Action("Create")|@Url.Action("Edit")|@Url.Action("Delete")">
				@Html.Partial("_List", new List<#= "<" + ViewDataTypeName + ">" #>())
			</div>
<#} 
else {
   if (GenerateFilter)
   {
				#>
			<div id="<#=ControllerRootName#>List" BIADialogRefresh="OnlyEvent;OnFormValidated:@Url.Action("Create")|@Url.Action("Edit")|@Url.Action("Delete")">
				@Html.Partial("_List", Model)
			</div>
<# 			
   }
   else
   {
#>
			<div BIADialogRefresh="Url:@Url.Action("_List");OnFormValidated:@Url.Action("Create")|@Url.Action("Edit")|@Url.Action("Delete")">
				@Html.Partial("_List", Model)
			</div>
<# 
    }
} #>
        </div>
    </div>
</div>

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>


<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
string TableName = ControllerRootName + "Table";
#>

@section Scripts {
    <script type="text/javascript">

<# if (GenerateListAjax || GenerateListFullAjax) { #>

        var columns = [
<#foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }

        if (property.IsAssociation && property.AssociationDirection == Microsoft.AspNet.Scaffolding.Core.Metadata.AssociationDirection.OneToMany){
#>
            { "data": "<#= property.PropertyName.Replace(".", "__") #>", "searchable":true, "orderable":true },
<# 
		}
		else {
#>
            { "data": "<#= GetValueExpression(property).Replace(".", "__") #>", "searchable":true, "orderable":true },
<# 
		} 
#>
<# 
    }
}
#>
            { "data": "Links" }]
<#      if (GenerateListAjax) { 
#>
        BIA.Net.DataTable.InitAjax('#<#= TableName #>', '@Url.Action("GetListData")', columns, null, "#<#= ViewDataTypeShortName #>Filter", null);
<# 
		}
		else if (GenerateListFullAjax) {
#>
        BIA.Net.DataTable.InitFullAjax('#<#= TableName #>', '@Url.Action("GetListData")', columns, true, null, null);
<# 
		} 
#>
<# 
} 
else {
#>
        BIA.Net.DataTable.InitStandard('#<#= TableName #>', '@Url.Action("_List")'<#if (GenerateFilter){#>, null, "#<#= ViewDataTypeShortName #>Filter"<# } #>);

<# 
} 
if (GenerateFilter)
{#>
        BIA.Net.Filter.Action.LoadFilterWhenOpen("#<#= ViewDataTypeShortName #>FilterButton", "#<#= ViewDataTypeShortName #>FilterContent", '@Url.Action("Filter")')
<# 
} 
#>
    </script>
}

<#@ include file="../../ModelMetadataFunctions.cs.include.t4" #>
