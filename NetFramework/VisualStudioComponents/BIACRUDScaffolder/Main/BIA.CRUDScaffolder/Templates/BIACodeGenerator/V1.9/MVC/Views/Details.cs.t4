<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{<#if (TranslateType) 
{#>
    ViewBag.Title = @TextResources.<#= ViewName#> + " " + @Html.Translate("<#= ViewDataTypeShortName #>");
<#}
else
{#>
    ViewBag.Title = @TextResources.<#= ViewName#> + "<#= ViewDataTypeShortName #>";
<#}
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2>@TextResources.<#= ViewName#> <#if (TranslateType){#>@Html.Translate("<#= ViewDataTypeShortName #>")<#}else{#><#= ViewDataTypeShortName #><#}#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@TextResources.<#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<div>
    <dl class="dl-horizontal">
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <dt>
            @Html.<#if (TranslateFields){#>T_<#}#>DisplayNameFor(model => model.<#= property.PropertyName #>)
        </dt>

        <dd>
<#
		if (property.IsAssociation && property.AssociationDirection == Microsoft.AspNet.Scaffolding.Core.Metadata.AssociationDirection.OneToMany){
#>
            @{ if (Model.<#= property.PropertyName #> != null)
                {
                    var last = Model.<#= property.PropertyName #>.LastOrDefault();
                    foreach (var subitem in Model.<#= property.PropertyName #>)
                    {
                        @Html.DisplayFor(model => subitem<#= GetDisplayPropertyName(property)#>)
                        if (!subitem.Equals(last))
                        {@Html.Raw(";")}
                    }
                }
            }
<# 
		}
		else {
#>
            @Html.DisplayFor(model => model.<#= GetValueExpression(property) #>)
<# 
		}
#>
        </dd>

<#
    }
}
#>
    </dl>
</div>

@section Buttons {
    <div class="btn-action-container">
        <div class="btn-action">
            <button type="button" onclick="location.href='@Url.Action("Index")'" class="btn btn-2">@TextResources.BackToList</button>
        </div>
        <div class="btn-action">
<#
string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
            <button type="button" onclick="location.href='@Url.Action("Edit", new { id = Model.<#= pkName #> })'" class="btn btn-2">@TextResources.Edit</button>
<#
} else {
#>
            <button type="button" onclick="location.href='@Url.Action("Edit", new { /* id = Model.PrimaryKey */ })'" class="btn btn-2">@TextResources.Edit</button>
<#
}
#>
        </div>
    </div>
}

<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="../../ModelMetadataFunctions.cs.include.t4" #>
