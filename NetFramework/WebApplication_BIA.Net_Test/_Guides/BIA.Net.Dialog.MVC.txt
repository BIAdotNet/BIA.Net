To transform MVC page in dialog 
(in this sample it is page generated by scaffold wizzard "MVC5 Controller with Views, using Entity Framework) :

Add in App_Start\BundleConfig.cs in function RegisterBundles :
            /*Add for BIA.Net*/
            bundles.Add(new ScriptBundle("~/bundles/BIA.Net").Include(
                  /*Add for BIA.Net.Dialog.MVC*/
                  "~/Scripts/jquery-ui-1.12.1.js",
                  "~/Scripts/BIA.Net/Dialog.js"
                  /*End add for BIA.Net.Dialog.MVC */));
            /*Add for BIA.Net*/

Add in Views/Shared/_Layout just before  @RenderSection("scripts", required: false) : 
			@Scripts.Render("~/bundles/BIA.Net")


In App_Start\BundleConfig.cs in the "~/Content/css" bundle add the following css :
                      /*Add for Dialog.MVC*/
                      "~/Content/themes/base/jquery-ui.min.css",
                      "~/Content/themes/base/core.css",
                      "~/Content/themes/base/dialog.css",
                      "~/Content/themes/base/theme.css",
                      "~/Content/BIA.Net/Dialog.css"
                      /*End add for Dialog.MVC */

Create in Views/Shared/ the layout "_Layout_Dialog.cshtml" for Popup :
	- Copy your _Layout.cshtml.
	- remove tags <html></html> <body></body> and the header and metadtat => ie keep only the content of the body
	- In script remove the bundle script keep only de sripts section ie : @RenderSection("scripts", required: false)

In Views\[Your Generated Items]\Index.cshtml add an attribut BIADialogLink= "Type:Modal" on each link you want to transform in openDialog. ex:
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { BIADialogLink = "Type:Modal" }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { BIADialogLink = "Type:Modal" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { BIADialogLink = "Type:Modal" })

Warning in @Html.ActionLink it is the 4st parameter if you have an actionLink with only 2 paramters add an empty object at 3st. ex :
				@Html.ActionLink("Create New", "Create",new { }, new { BIADialogLink = "Type:Modal" })

In Controllers\[your Controller].cs make your controller herite of DialogBaseContoller and add using BIA.Net.Dialog.MVC.Controllers;  ex:
	     public class [your Controller] : DialogBaseContoller

----- Test the click on edit, details and Delete correct open Pop-up and are functionnal------------------

Your remark than after a change in edit item in liste are not refresh. To refresh then :


Create a partial view Views\[Your Generated Items]\_List.cshtml and extract form  Views\[Your Generated Items]\Index.cshtml all the list table that you copy in the partial view.
Add the same @model header than in Index.cshtml.

ex of _List.cshtml :
		@model IEnumerable<[Your object Type]>

		<table class="table">
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.Titre)
				</th>
				<th></th>
			</tr>

			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Titre)
					</td>
					<td>
						@Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { BIADialogLink = "Type:Non-Modal" }) |
						@Html.ActionLink("Details", "Details", new { id = item.Id }, new { BIADialogLink = "Type:Non-Modal" }) |
						@Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { BIADialogLink = "Type:Modal" })
					</td>
				</tr>
			}

		</table>


 
In Views\[Your Generated Items]\Index.cshtml replace this exracted table by :
		<div BIADialogRefresh="Url:@Url.Action("_List");OnFormValidated:@Url.Action("Create")|@Url.Action("Edit")|@Url.Action("Delete")" >
			@Html.Partial("_List", Model)
		</div>



In Controllers\[your Controller].cs add the "ActionResult _List()" function similar to "ActionResult Index()" but return a PartailView
		public ActionResult _List()
		{
			return PartialView(db.[Your object dbSet].ToList());
		}

--- now the List is refresh at each form submit

Advanced : 

To open several popup at the same time in Views\[Your Generated Items]\_List.cshtml use  BIADialogLink = "Type:Non-Modal :

                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { BIADialogLink = "Type:Non-Modal" }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { BIADialogLink = "Type:Non-Modal" }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { BIADialogLink = "Type:Non-Modal" })

You remark that you can open an edit dialog and a delete on same element. It could be a problem if you supress an item open in edit. To close dialog on same element add an ID

                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { BIADialogLink = "Type:Non-Modal;Id:Family" + @item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { BIADialogLink = "Type:Non-Modal;Id:Family" + @item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { BIADialogLink = "Type:Non-Modal;Id:Family" + @item.Id })



You can call a javascript event on dialog after loaded with $(window).on('OnBIADialogLoaded', function (e) { MyFunc(e.dialog);});
example to format date:

function SetCalendarDatePicker(root)
{
    if (root.find(".calendarPicker").length > 0) {
        root.find('.calendarPicker').datepicker({ format: "dd/mm/yyyy" });
    }
    if ($.validator != null) {
        $.validator.methods.date = function (value, element) {
            var dpg = $.fn.datepicker.DPGlobal;
            return this.optional(element) || dpg.parseDate(value, dpg.parseFormat("dd/mm/yyyy")) !== null;
        }
    }
}

$(document).ready(function () {
    SetCalendarDatePicker($(document));
    $(window).on('OnBIADialogLoaded', function (e) {
        SetCalendarDatePicker(e.dialog);
    });
});

You can call a javascript event on dialog resize with $(window).on('OnBIADialogResize', function (e) { MyFunc(e.dialog);});

You can call a javascript event on refresh element with $(window).on('OnBIADialogRefresh', function (e) { MyFunc(e.dialog, e.element);});
    <script type="text/javascript">
            $(document).ready(function() {
                $('#Table').DataTable();
            });
            $(window).on('OnBIADialogRefresh', function (e) {
                e.element.find('#Table').DataTable()
            });
    </script>




Known problems :
Be carfull on javascript that submit form: 
	- Sometime after the submit there is another submit or redirect, in standard form you don't see it because the current page change and cancel this second action. Sample:
                <button onclick="$('#myForm-Create-WeekType').append('<input type=\'hidden\' name=\'Action\' value=\'Apply\' />').submitNoValidation();" class="btn btn-1 btn-lg">Apply it</button>
				=> you should add (type="button") to not resubmit the form after the onClick action.
                <button type="button" onclick="$('#myForm-Create-WeekType').append('<input type=\'hidden\' name=\'Action\' value=\'Apply\' />').submitNoValidation();" class="btn btn-1 btn-lg">Apply it</button>

Warning if you have several forms in page and dialog you can mismatch the form to submit if you call it by the id. Be sure to use an unique id for forms in all your application.
We suggest you to add the action name and controller name in the form id. Sample: 
				@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myForm-Create-Family", @class = "PreventDuplicateRequest" }))
